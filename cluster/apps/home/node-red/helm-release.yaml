---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: node-red
  namespace: home
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts/
      chart: node-red
      version: 10.3.2
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home-charts
        namespace: flux-system
      interval: 5m
  # dependsOn:
  #   - name: home-assistant
  #     namespace: home
  values:
    # initContainers:
    #   npm-update-modules:
    #     image: node:12-buster-slim@sha256:426f05df1d1feefa841471c0faa22a20db286766bf528993421847f9a3b8efe3
    #     command: ["npm", "update", "--verbose"]
    #     workingDir: /data
    #     volumeMounts:
    #       - name: config
    #         mountPath: /data
    image:
      repository: ghcr.io/k8s-at-home/node-red
      tag: v3.0.1
    env:
      TZ: "Europe/Paris"
      NODE_RED_ENABLE_PROJECTS: "true"
      NODE_RED_ENABLE_SAFE_MODE: "false"
    ingress:
      main:
        enabled: true
        ingressClassName: "nginx"
        annotations:
          nginx.ingress.kubernetes.io/auth-url: "http://authelia.networking.svc.cluster.local/api/verify"
          nginx.ingress.kubernetes.io/auth-signin: "https://login.${SECRET_DOMAIN}"
          external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
          external-dns/is-public: "true"
          hajimari.io/enable: "true"
          hajimari.io/icon: "resistor-nodes"
        hosts:
          - host: "node-red.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - "node-red.${SECRET_DOMAIN}"
    persistence:
      config:
        enabled: true
        existingClaim: node-red-config-v1
        mountPath: "/data"
    # podAnnotations:
    #   backup.velero.io/backup-volumes: config
    #   pre.hook.backup.velero.io/container: fsfreeze
    #   pre.hook.backup.velero.io/command: '["/sbin/fsfreeze", "--freeze", "/data"]'
    #   post.hook.backup.velero.io/container: fsfreeze
    #   post.hook.backup.velero.io/command: '["/sbin/fsfreeze", "--unfreeze", "/data"]'
    resources:
      requests:
        memory: 60Mi
        cpu: 10m
      limits:
        memory: 100Mi
    # additionalContainers:
    #   fsfreeze:
    #     name: fsfreeze
    #     image: ghcr.io/k8s-at-home/fsfreeze:v2.37-r0
    #     volumeMounts:
    #       - name: config
    #         mountPath: /data
    #     securityContext:
    #       privileged: true
